#------------------------------------------------------------------------------
# Настройка GIT
#------------------------------------------------------------------------------
    git config --global user.name "name"
    git config --global user.email "email"
    git config --global init.defaultBranch name
    git config --global core.editor "editor_name"

#init [opt] [<dir>] - создает репозиторий в текущей дериктории.
#status [opt] [<pathspec>] - показывает статус текущего дерева.
#add [opt] [<pathspec>] - добавляет файлы для отслеживания (индексирует 
    изменения).
#checkout [opt] [<branch>] - Переключает ветки, либо восстанавливает состояние 
    текущей (отменяет все изменения).
    ex: git checkout . - Востанавливает файл до состояния в последнем коммите.
#reset [opt] - Снимает индексацию изменений.
#commit [opt] - Записывает все проиндексированные изменения в репозиторий.
    opt: 
    -m <message> - добавляет коммит сообщение без вызова текстового 
    --amend - изменяет коментарий к текущему коммиту.
    
    редактора.
#push [opt | --all] - добавляет всё в облако.
#log [opt] - показывает историю коммитов.
    opt: 
    --oneline - выводит каждую запись в 1 строке.
    --since="5 minutes ago"
    --until="5 minutes ago"
    --author="name"
    --all 
Фотмат лога можно настроить глобально:
    git config --global format.pretty "%h %ad | %s%d [%an]"
    git config --global log.data short

#switch [opt] <branch> - Переключение между ветками.

#------------------------------------------------------------------------------
# Создание Тегов
#------------------------------------------------------------------------------
#tag [opt] - Создае, отображает, удаляет или прдтверждает таг объекта.
    ex: 
    git tag - Отображает доступные теги.
    git tag ver1 - Создает таг ver1 для текущего коммита.
    git checkout ver1 - Переход к тегу ver1.
    git -d <tag> - Удаление тега.

#------------------------------------------------------------------------------
# Отмена коммита
#------------------------------------------------------------------------------
#revert [opt] [<commit>] - Записывает новый коммит, который отменяет 
    предидущий.

#reset [opt] [<commit>] - Сбрасывает состояние ветки до указанного коммита,
    опционально можно сбросить и состояние репозитория(файлов). Сброшенные 
    коммиты доступны в логе с опцией --all.
    opt: --hard - Сбросить состояние файлов до указанного коммита.

#------------------------------------------------------------------------------
# Изменение коммита
#------------------------------------------------------------------------------
var1:
    git commit --amend -m "new message"
var2:
    git reset <prev_commit>
    git add --all
    git commit -m "new message"
    
