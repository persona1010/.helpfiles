
#------------------------------------------------------------------------------
#  Перенаправление стандартного ввода/вывода
#------------------------------------------------------------------------------
0,1,2 - файловые дескрипторы stdinput, stdout, stderr соответственно.
$ ls >  output.txt      - перенаправление стандартного вывода в файл (rewrite).
$ ls >> output.txt      - перенаправление стандартного вывода в конец файла.
$ ls 2> /dev/null       - перенаправление stderr в никуда. 
$ ls >  output.txt 2>&1 - перенаправление stderr в stdout.

[WARNING] Перенаправление стандартного вывода ошибок должно производится после 
перенаправления стандартного вывода. Иначе не сработает.

#------------------------------------------------------------------------------
#  Подстановки
#------------------------------------------------------------------------------
Wildcards
Символы:
    *              Любая последовательность символов.
    ?              Любой один символ.
    [символы]      Любой символ из набора.
    [!символы]     Любой символ не входящий в набор.
    [[:class:]]    Любой символ из класса символов.

Наиболее часто используемые классы символов:
    [:allnum:]     Любой алфавитно-цифровой символ.
    [:alpha:]      Любой алфавитный символ.
    [:digit:]      Любой цифровой символ.
    [:lower:]      Любая буква в нижнем регистре.
    [:upper:]      Любая буква в верхнем регистре.

Вместо диапазонов символов лучше использовать классы.

Простая целочисленная арифметика.

$ echo $((2+2))
  Пробелы в процессе выполнения опускаются.
  Поддерживаемые операции:
    +  - Сложение.
    -  - Вычитание.
    *  - Умножение.
    /  - Деление.
    %  - Деление по модулю.
    ** - Возведение в степень.

Подстановка фигурных скобок, диапазоны.

$ echo before-{A,B,C}-after
  result: 'before-A-after before-B-after before-C-after'

$ echo num_{1..5}
  result: 'num_1 num_2 num_3 num_4 num_5'

Начиная с версии оболочки 4.0 числа можно дополнять нулями.

$ echo {01..03}
  result: '01 02 03'

$ echo {Z..A}
  result: 'Z Y X W ...'

Допускается вложение фигурных скобок.

$ echo a{A{1,2},B{3,4}}b
  result: 'aA1b aA2b aB3b aB4b'

more examples:
    mkdir {2023..2024}-{01..12} - Создаст 24 директории для каждого месяца за 
                                  два года.

Подстановка комманд.
$ file $(ls -d /usr/bin/* | grep zip)
$ file `ls -d /usr/bin/* | grep zip` - Альтернативный синтаксис.

Экранирование.
$ echo $(cal) - Выведет все в одну строку.
$ echo "$(cal)" - Выведет несколько строк.
Одиночные кавычки подавляют все подстановки.
$ echo '$HOME'

Экранируемые символы: $, !, &, #, \ ...
Управляющие последовательности: \a, \b, \n, \r, \t.
examples:
$ sleep 10; echo -e "Time's up\a" - \a - базер.
$ sleep 10; echo "Time's up" $'\a'

#------------------------------------------------------------------------------
#  Циклы
#------------------------------------------------------------------------------

while [ true ]; do commands; done
while control-command; do commands; done
while : ; do  commands; done

for VAR in 1 2 3 4 .. N; do 
    commands; 
done

for VAR in file1 file2 file3; do 
    commands; 
done

for OUTPUT in $(linux-command);do
    commands on $OUTPUT
done

# range {FROM..TO} начиная с bash v3.0
for VAR in {1..5};do
    echo "hello world $VAR times"
done

# {START..END..INCREMENT} начиная с bash v4.0
for VAR in {0..10..2};do
    echo "hello world $VAR times"
done

# Тоже самое только с использованием комманды
for VAR in $(seq 0 2 10);do
    echo "hello world $VAR times"
done

# C style
for (( VAR=0; VAR<10; VAR++));do
    echo "hello world $VAR times"
done

#------------------------------------------------------------------------------
#  SHORTCUTS
#------------------------------------------------------------------------------
Для управления курсором используется библиотека Readline (man Readline).

Перемещение курсора.
    CTRL+A            Перемещение курсора в начало строки.
    CTRL+E            Перемещение курсора в конец строки.
    CTRL+F            Перемещение курсора на один символ в перед.
    CTRL+B            Перемещение курсора на один символ назад.
    ALT+ F            Перемещение курсора на одно слово в перед.
    ALT+ B            Перемещение курсора на одно слово назад.
    CTRL+L            Очищает экран и устанавливает курсор в верхний левый угол
                      (clear).

Изменение текста.
    CTRL+D            Удаляет символ в позиции курсора.
    CTRL+T            Меняет местами два символа - в позиции курсора и
                      предшествующий ему.
    ALT+ T            Меняет местами два слова - в позиции курсора и 
                      предшествующий ему.
    ALT+ L            Перевод в нижний регистр от позиции курсора до конца 
                      слова.
    ALT+ U            Перевод в верхний регистр от позиции курсора до конца 
                      слова.

Удаление и возврат текста.
    CTRL+K            Удаляет символы от позиции курсора до конца строки.
    CTRL+U            Удаляет символы от позиции курсора до начала строки.
    ALT +D            Удаляет символы от позиции курсора до начала слова.
    ALT +BACKSPACE    Удаляет символы от позиции курсора до начала слова.
    CTRL+Y            Извлекает текст из кольцевого буфера удалений и 
                      возвращает его в позицию курсора.

Дополнения (complition).
    alt +?            Выводит список возможных дополнений. Аналогичный эффект 
                      даёт дабл-таб.

Команды для работы с историей.
    CTRL+P            Переход к предыдущей записи в истории.
    CTRL+N            Переход к следующей записи в истории.
    ALT +<            Переход в начало (к первой записи) списка истории.
    ALT +>            Переход в конец (к последней записи) списка истории.
    CTRL+R            Инкременальный (с вводом каждого символа изменяется
                      результат поиска) поиск в обратном порядке. Поиск 
                      выполняется поступательно, от текущей записи вверх по 
                      списку истории.
    ALT +P            Поиск в обратном порядке, не инкременальный. При 
                      использовании этого поиска введите искомую строку и 
                      нажмите ENTER, и только после этого будет выполнен 
                      фактический поиск.
    ALT +N            Поиск в прямом порядке, не поступательный.
    CTRL+O            Выполните текущую команду в списке истории и перейти к 
                      следующей.

Подстановки записи истории.
$ history - выводит историю командной строки.
$ !88     - вставляет 88 строку с командой из истории.

!!        - Повторяет последнюю команду.
!number   - Повторяет команду из истории по номеру строки.
!строка   - Повторяет последнюю команду в списке истории, начинающуюся с 
            указанной строки.
!?строка  - Повторяет последнюю команду в  списке истории, содержащую указанную
            строку.

#------------------------------------------------------------------------------
#  UTILITIES
#------------------------------------------------------------------------------
type    - сообщает, как интерпретируется имя указанной команды.
which   - сообщает, какая программа будет выполнена.
help    - выводит справку по встроенным командам оболочки.
man     - выводит страницу справочного руководства с описанием команды.
apropos - выводит список подходящих команд.
info    - выводит запись из справочного руководства Info с описанием команды.
whatis  - выводит краткое описание команды.
alias   - создаёт псевдоним для команды, или выводит список установленных.

cat     - объединяет файлы.
sort    - сортирует строки текста.
uniq    - сообщает о повторяющихся строках, или удаляет их.
grep    - находит и выводит строки соответствующие шаблону. 
wc      - выводит число символов перевода строки, слов и байтов в каждом 
          указанном файле.
head    - выводит первые строки из файла.
tail    - выводит последние строки из файла.
tee     - читает данные со стандартного ввода и записывает в стандартный вывод
          и в файл.

id      - выводит информацию о пользователе и группах в которых он состоит.
chmod   - изменяет режим доступа к файлу.
umask   - битовая маска в восьмеричном формате (perm & ~mask) определяет 
          разрешение доступа к файлам по умолчанию.
su      - запускает командную оболочку от имени другого пользователя.
sudo    - выполняет команду от имени другого пользователя.
chown   - изменяет владельца файла.
chgrp   - изменяет группу файла.
passwd  - изменяет пароль пользователя.

ps      - выводит список процессов, выполняющихся в текущий момент.
top     - выводит задачи.
jobs    - выводит список активных заданий.
bg      - переводит задание в фоновый режим работы.
fg      - переводит задание в режим работы на передний план.
kill    - посылает сигнал процессу.
Killall - останавливает процессы по именам.
shutdown - остановка или перезагрузка системы.

printenv - выводит часть или всё окружение.
set     - устанавливает параметры командной оболочки, либо выведет переменные 
          окружения и оболочки, - а также все объявленные функции 
          коммандной оболочки.
export  - экспортирует окружение для программ, которые будут выполняться 
          позднее.

